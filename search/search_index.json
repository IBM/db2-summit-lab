{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Db2 Lab Series Welcome to this workshop! This environment has been provisioned for you to run either one of the following labs: Introduction to Db2U and Db2Shift on Kubernetes Db2 Application Development using Db2 Magic Commands Make sure to read the following sections to learn how to connect to your lab. Once you have connected, follow the instructions specific to the lab that you are running.","title":"Introduction"},{"location":"#db2-lab-series","text":"Welcome to this workshop! This environment has been provisioned for you to run either one of the following labs: Introduction to Db2U and Db2Shift on Kubernetes Db2 Application Development using Db2 Magic Commands Make sure to read the following sections to learn how to connect to your lab. Once you have connected, follow the instructions specific to the lab that you are running.","title":"Db2 Lab Series"},{"location":"console/","text":"Using the VM Remote Console The server that has been provisioned has no physical monitor attached to it (headless is what it is commonly referred to) and so we need to use a different technique to view the desktop of the main user or the system. Your workshop reservation contains details of the open ports of the server along with links to the Virtual Console. Scrolling further down the page you will find the console buttons. The server that you want to connect to is the K8S server (c2ck8slab) which should be the last button in the list. When you click on the blue button, a popup window will display with the log on screen. You should immediately select the \"Open in a new window\" option so that you can clearly see the logon screen. Clock on the bottom of the blue screen, and while holding the mouse button, swipe up to reveal the login user ids. Select the K8S userid. The password is engageibm . You will now see the main screen of the k8s user. All the lab exercises will be done from within this environment. You can make the console occupy the entire size of the web browser window by using the menu found at the top of the screen. Executing Commands in a Terminal Window There will be a few commands that you will need to execute from a terminal window. To open a terminal window, click on the Terminal icon on the desktop. This will open up a window on the desktop where you will be able to issue commands. Alternatively, you can use the menu at the top of the screen (Applications) and select the terminal application. Cut and Paste When using the virtual console, you are not able to copy a string from your operating system (Windows or OSX) and paste it into the remote console. You must use the menu that is provided with the console to copy text into the system. The menu is found at the top of the virtual screen and provides options to resize the window, set a fixed size, and copy text into the server. When you click on the text insert button (highlighted), the paste menu will appear. Place the text you want to copy into the dialog box. One you press \"Send Text\", it will copy the text into the currently open application. In this case, it is a terminal window.","title":"VM Console"},{"location":"console/#using-the-vm-remote-console","text":"The server that has been provisioned has no physical monitor attached to it (headless is what it is commonly referred to) and so we need to use a different technique to view the desktop of the main user or the system. Your workshop reservation contains details of the open ports of the server along with links to the Virtual Console. Scrolling further down the page you will find the console buttons. The server that you want to connect to is the K8S server (c2ck8slab) which should be the last button in the list. When you click on the blue button, a popup window will display with the log on screen. You should immediately select the \"Open in a new window\" option so that you can clearly see the logon screen. Clock on the bottom of the blue screen, and while holding the mouse button, swipe up to reveal the login user ids. Select the K8S userid. The password is engageibm . You will now see the main screen of the k8s user. All the lab exercises will be done from within this environment. You can make the console occupy the entire size of the web browser window by using the menu found at the top of the screen.","title":"Using the VM Remote Console"},{"location":"console/#executing-commands-in-a-terminal-window","text":"There will be a few commands that you will need to execute from a terminal window. To open a terminal window, click on the Terminal icon on the desktop. This will open up a window on the desktop where you will be able to issue commands. Alternatively, you can use the menu at the top of the screen (Applications) and select the terminal application.","title":"Executing Commands in a Terminal Window"},{"location":"console/#cut-and-paste","text":"When using the virtual console, you are not able to copy a string from your operating system (Windows or OSX) and paste it into the remote console. You must use the menu that is provided with the console to copy text into the system. The menu is found at the top of the virtual screen and provides options to resize the window, set a fixed size, and copy text into the server. When you click on the text insert button (highlighted), the paste menu will appear. Place the text you want to copy into the dialog box. One you press \"Send Text\", it will copy the text into the currently open application. In this case, it is a terminal window.","title":"Cut and Paste"},{"location":"db2-jupyter/","text":"Db2 Development with Jupyter Notebooks To refresh the Db2 Development lab, make sure that you are using the VM Console and have opened a terminal window. Download the Latest Lab Contents This will place the file into the Download directory of the k8s user. Download latest notebooks Latest Lab Material Recreate the notebook directory ```bash rm -rf ~/notebooks unzip ~/Downloads/notebooks.zip Open the new Table of Contents Table of Contents","title":"Db2 Development"},{"location":"db2-jupyter/#db2-development-with-jupyter-notebooks","text":"To refresh the Db2 Development lab, make sure that you are using the VM Console and have opened a terminal window.","title":"Db2 Development with Jupyter Notebooks"},{"location":"db2-jupyter/#download-the-latest-lab-contents","text":"This will place the file into the Download directory of the k8s user. Download latest notebooks Latest Lab Material Recreate the notebook directory ```bash rm -rf ~/notebooks unzip ~/Downloads/notebooks.zip Open the new Table of Contents Table of Contents","title":"Download the Latest Lab Contents"},{"location":"db2-k8s/","text":"SQL Examples This section contains all the SQL examples used throughout the lab. You can copy the SQL from this chapter to use in the Query Workspace, rather than having to cut and paste them from documentation or type them in. Each SQL statement will reference the chapter in the PDF documentation. 7 Access Control 7.1 Enter this text into the SQL window and Run the code SELECT * FROM \"hive_data\".\"ontime\".\"ontime\" LIMIT 10; 7.2 Enter this text into the SQL window and Run the code SELECT flightdate, reporting_airline, flight_number_reporting_airline, originairportid, destairportid FROM \"hive_data\".\"ontime\".\"ontime\" LIMIT 10; 8 Query Workspace 8.1 Retrieve 10 rows from the ontime table SELECT * FROM \"hive_data\".\"ontime\".\"ontime\" LIMIT 10; 8.2 Copy the following SQL and place it into the SQL window SELECT * FROM \"hive_data\".\"ontime\".\"ontime\" LIMIT 10; SELECT * FROM \"hive_data\".\"ontime\".\"ontime\" LIMIT 20; 9 PrestoDB SQL 9.1 Display the catalogs show catalogs; 9.2 Show schemas in tpch show schemas in tpch; 9.3 Set the catalog to tpch.tiny USE tpch.tiny; 9.4 View tables in the current schema show tables; 9.5 Set the catalog to tpch.tiny and show the tables USE tpch.tiny; show tables; 9.6 Inspect schema of the customer table use tpch.tiny; describe customer; 9.7 Show the customer table columns using an alternate format show columns from tpch.tiny.customer; 9.8 Inspect available Date functions show functions like 'date%'; 9.9 View the contents of the sf1 schema show tables in tpch.sf1; 9.10 Query data from customer table select * from tpch.sf1.customer limit 5; 9.11 Gather statistics on the customer table show stats for tpch.sf1.customer; 10 Analytic Workloads 10.1 Create the workshop schema in the iceberg_data catalog CREATE SCHEMA IF NOT EXISTS iceberg_data.workshop with (location='s3a://iceberg-bucket/'); 10.2 Create the workshop customer table create table iceberg_data.workshop.customer as select * from tpch.tiny.customer; 10.3 Run a simple scan query which selects customer names and market segment use iceberg_data.workshop; select name, mktsegment from customer limit 3; 10.4 Run an explain against the previous statement use iceberg_data.workshop; explain select name, mktsegment from customer; 10.5 Explain the query and focus on IO operations use iceberg_data.workshop; explain (type io) select name, mktsegment from customer; 10.6 Explain physical execution plan for the query use iceberg_data.workshop; explain (type distributed) select name, mktsegment from customer; 10.7 Enter the following query into the SQL window and press the Explain button select name, mktsegment from iceberg_data.workshop.customer 10.8 Create a partitioned table create table iceberg_data.workshop.part_customer with (partitioning = array['mktsegment']) as select * from tpch.tiny.customer; 10.9 Run a query against the partitioned table select * from iceberg_data.\"workshop\".part_customer where mktsegment='MACHINERY'; 10.10 Create the Orders Table create table iceberg_data.workshop.orders as select * from tpch.tiny.orders; 10.11 SQL with a Windowing function SELECT orderkey, clerk, totalprice, rank() OVER (PARTITION BY clerk ORDER BY totalprice DESC) AS rnk FROM iceberg_data.workshop.orders ORDER BY clerk, rnk; 10.12 Save a query as a prepared statement prepare customer_by_segment from select * from iceberg_data.workshop.customer where mktsegment=?; 10.13 Execute prepared statement using parameters prepare customer_by_segment from select * from iceberg_data.workshop.customer where mktsegment=?; execute customer_by_segment using 'FURNITURE'; 11 Advanced Functions 11.1 Concatenate two strings select concat(cast(custkey as varchar),'-',name) from iceberg_data.workshop.customer limit 2; 11.2 Select orders from the last 2 days select orderdate from iceberg_data.workshop.orders where orderdate > date '1998-08-02' - interval '2' day; 11.3 Compute the number of orders by year select distinct year(orderdate), count(orderkey) from iceberg_data.workshop.orders group by year(orderdate); 11.4 SQL Representation of Co-ordinates select ST_Point(-121.748360,37.195840) as SVL, ST_Point(-122.378952, 37.621311) as SFO; 11.5 SQL Representation of a Line select ST_LineFromText('LINESTRING (-121.74294303079807 37.19665657093434, -121.73659072815602 37.20102399761407)'); 11.6 SQL Representation of a Polygon select ST_Polygon('POLYGON ( (-121.74418635253568 37.196001834113844, -121.74499684288966 37.19668005184322, -121.74584008032835 37.19707784979194, -121.74629035274705 37.197645197338105, -121.74672425162339 37.198186455965086, -121.74705172247337 37.19828427337538, -121.74760023614738 37.19827775221884, -121.74848440744239 37.19836252721197, -121.74932764488139 37.19789300297414, -121.75039192514376 37.19746260319114, -121.75130884352407 37.19721479614175, -121.75195559845278 37.1963670290329, -121.75198015876644 37.19555185937345, -121.7508585711051 37.19458016564036, -121.74940132582242 37.19447582194559, -121.74841891327239 37.1942866986312, -121.7474446874937 37.193556286900346, -121.74418635253568 37.196001834113844))'); 11.7 Distance between SFO airport and IBM SVL select ST_Distance(to_spherical_geography(ST_Point(-122.378952, 37.621311)), to_spherical_geography(ST_Point(-121.748360,37.195840)))*0.000621371 as distance_in_miles; 11.8 What queries are currently running? select * from \"system\".runtime.queries limit 5; 11.9 What tasks make up a query and where is the task running? select * from \"system\".runtime.tasks limit 5; 12 Time Travel 12.1 Check current snapshots \u2013 STARTING STATE SELECT * FROM iceberg_data.workshop.\"customer$snapshots\" ORDER BY committed_at; 12.2 Capture the first snapshot ID SELECT snapshot_id FROM iceberg_data.workshop.\"customer$snapshots\" ORDER BY committed_at; 12.3 Insert a new customer record into the table insert into iceberg_data.workshop.customer values(1501,'Deepak','IBM SVL',16,'123-212-3455', 123,'AUTOMOBILE','Testing snapshots'); 12.4 View available snapshots SELECT * FROM iceberg_data.workshop.\"customer$snapshots\" ORDER BY committed_at; 12.5 Select customer Deepak select * from iceberg_data.workshop.customer where name='Deepak'; 12.6 View the available snapshots SELECT snapshot_id FROM iceberg_data.workshop.\"customer$snapshots\" ORDER BY committed_at; 12.7 Rollback to previous snapshot - Replace the ID parameter with the snapshot ID previously found. Remember the closing parenthesis! CALL iceberg_data.system.rollback_to_snapshot('workshop','customer',ID) 12.8 Select customer Deepak select * from iceberg_data.workshop.customer where name='Deepak'; 13 Federation 13.1 Select the names of employees in the GOSALES database with employee ids between 4000 and 5000 select go.\"EMPLOYEE_KEY\", go.\"FIRST_NAME\", go.\"LAST_NAME\" from gosales.\"GOSALESDW\".\"EMP_EMPLOYEE_DIM\" go where go.\"EMPLOYEE_KEY\" between 4000 and 5000 order by go.\"EMPLOYEE_KEY\" 13.2 Select TPCH customers who are employees in GOSALES select t1.custkey, go.\"FIRST_NAME\", go.\"LAST_NAME\" from tpch.sf1.customer t1, gosales.\"GOSALESDW\".\"EMP_EMPLOYEE_DIM\" go where t1.custkey between 4000 and 5000 AND go.\"EMPLOYEE_KEY\" = t1.custkey order by t1.custkey 13.3 Create a table in iceberg_data using the Db2 employee table create table iceberg_data.workshop.db2employee AS select go.\"EMPLOYEE_KEY\", go.\"FIRST_NAME\", go.\"LAST_NAME\" from gosales.\"GOSALESDW\".\"EMP_EMPLOYEE_DIM\" go where go.\"EMPLOYEE_KEY\" between 4000 and 5000 order by go.\"EMPLOYEE_KEY\" 13.4 Query the contents of the new db2employee table select * from iceberg_data.workshop.db2employee","title":"Db2U on Kubernetes"},{"location":"db2-k8s/#sql-examples","text":"This section contains all the SQL examples used throughout the lab. You can copy the SQL from this chapter to use in the Query Workspace, rather than having to cut and paste them from documentation or type them in. Each SQL statement will reference the chapter in the PDF documentation.","title":"SQL Examples"},{"location":"db2-k8s/#7-access-control","text":"7.1 Enter this text into the SQL window and Run the code SELECT * FROM \"hive_data\".\"ontime\".\"ontime\" LIMIT 10; 7.2 Enter this text into the SQL window and Run the code SELECT flightdate, reporting_airline, flight_number_reporting_airline, originairportid, destairportid FROM \"hive_data\".\"ontime\".\"ontime\" LIMIT 10;","title":"7 Access Control"},{"location":"db2-k8s/#8-query-workspace","text":"8.1 Retrieve 10 rows from the ontime table SELECT * FROM \"hive_data\".\"ontime\".\"ontime\" LIMIT 10; 8.2 Copy the following SQL and place it into the SQL window SELECT * FROM \"hive_data\".\"ontime\".\"ontime\" LIMIT 10; SELECT * FROM \"hive_data\".\"ontime\".\"ontime\" LIMIT 20;","title":"8 Query Workspace"},{"location":"db2-k8s/#9-prestodb-sql","text":"9.1 Display the catalogs show catalogs; 9.2 Show schemas in tpch show schemas in tpch; 9.3 Set the catalog to tpch.tiny USE tpch.tiny; 9.4 View tables in the current schema show tables; 9.5 Set the catalog to tpch.tiny and show the tables USE tpch.tiny; show tables; 9.6 Inspect schema of the customer table use tpch.tiny; describe customer; 9.7 Show the customer table columns using an alternate format show columns from tpch.tiny.customer; 9.8 Inspect available Date functions show functions like 'date%'; 9.9 View the contents of the sf1 schema show tables in tpch.sf1; 9.10 Query data from customer table select * from tpch.sf1.customer limit 5; 9.11 Gather statistics on the customer table show stats for tpch.sf1.customer;","title":"9 PrestoDB SQL"},{"location":"db2-k8s/#10-analytic-workloads","text":"10.1 Create the workshop schema in the iceberg_data catalog CREATE SCHEMA IF NOT EXISTS iceberg_data.workshop with (location='s3a://iceberg-bucket/'); 10.2 Create the workshop customer table create table iceberg_data.workshop.customer as select * from tpch.tiny.customer; 10.3 Run a simple scan query which selects customer names and market segment use iceberg_data.workshop; select name, mktsegment from customer limit 3; 10.4 Run an explain against the previous statement use iceberg_data.workshop; explain select name, mktsegment from customer; 10.5 Explain the query and focus on IO operations use iceberg_data.workshop; explain (type io) select name, mktsegment from customer; 10.6 Explain physical execution plan for the query use iceberg_data.workshop; explain (type distributed) select name, mktsegment from customer; 10.7 Enter the following query into the SQL window and press the Explain button select name, mktsegment from iceberg_data.workshop.customer 10.8 Create a partitioned table create table iceberg_data.workshop.part_customer with (partitioning = array['mktsegment']) as select * from tpch.tiny.customer; 10.9 Run a query against the partitioned table select * from iceberg_data.\"workshop\".part_customer where mktsegment='MACHINERY'; 10.10 Create the Orders Table create table iceberg_data.workshop.orders as select * from tpch.tiny.orders; 10.11 SQL with a Windowing function SELECT orderkey, clerk, totalprice, rank() OVER (PARTITION BY clerk ORDER BY totalprice DESC) AS rnk FROM iceberg_data.workshop.orders ORDER BY clerk, rnk; 10.12 Save a query as a prepared statement prepare customer_by_segment from select * from iceberg_data.workshop.customer where mktsegment=?; 10.13 Execute prepared statement using parameters prepare customer_by_segment from select * from iceberg_data.workshop.customer where mktsegment=?; execute customer_by_segment using 'FURNITURE';","title":"10 Analytic Workloads"},{"location":"db2-k8s/#11-advanced-functions","text":"11.1 Concatenate two strings select concat(cast(custkey as varchar),'-',name) from iceberg_data.workshop.customer limit 2; 11.2 Select orders from the last 2 days select orderdate from iceberg_data.workshop.orders where orderdate > date '1998-08-02' - interval '2' day; 11.3 Compute the number of orders by year select distinct year(orderdate), count(orderkey) from iceberg_data.workshop.orders group by year(orderdate); 11.4 SQL Representation of Co-ordinates select ST_Point(-121.748360,37.195840) as SVL, ST_Point(-122.378952, 37.621311) as SFO; 11.5 SQL Representation of a Line select ST_LineFromText('LINESTRING (-121.74294303079807 37.19665657093434, -121.73659072815602 37.20102399761407)'); 11.6 SQL Representation of a Polygon select ST_Polygon('POLYGON ( (-121.74418635253568 37.196001834113844, -121.74499684288966 37.19668005184322, -121.74584008032835 37.19707784979194, -121.74629035274705 37.197645197338105, -121.74672425162339 37.198186455965086, -121.74705172247337 37.19828427337538, -121.74760023614738 37.19827775221884, -121.74848440744239 37.19836252721197, -121.74932764488139 37.19789300297414, -121.75039192514376 37.19746260319114, -121.75130884352407 37.19721479614175, -121.75195559845278 37.1963670290329, -121.75198015876644 37.19555185937345, -121.7508585711051 37.19458016564036, -121.74940132582242 37.19447582194559, -121.74841891327239 37.1942866986312, -121.7474446874937 37.193556286900346, -121.74418635253568 37.196001834113844))'); 11.7 Distance between SFO airport and IBM SVL select ST_Distance(to_spherical_geography(ST_Point(-122.378952, 37.621311)), to_spherical_geography(ST_Point(-121.748360,37.195840)))*0.000621371 as distance_in_miles; 11.8 What queries are currently running? select * from \"system\".runtime.queries limit 5; 11.9 What tasks make up a query and where is the task running? select * from \"system\".runtime.tasks limit 5;","title":"11 Advanced Functions"},{"location":"db2-k8s/#12-time-travel","text":"12.1 Check current snapshots \u2013 STARTING STATE SELECT * FROM iceberg_data.workshop.\"customer$snapshots\" ORDER BY committed_at; 12.2 Capture the first snapshot ID SELECT snapshot_id FROM iceberg_data.workshop.\"customer$snapshots\" ORDER BY committed_at; 12.3 Insert a new customer record into the table insert into iceberg_data.workshop.customer values(1501,'Deepak','IBM SVL',16,'123-212-3455', 123,'AUTOMOBILE','Testing snapshots'); 12.4 View available snapshots SELECT * FROM iceberg_data.workshop.\"customer$snapshots\" ORDER BY committed_at; 12.5 Select customer Deepak select * from iceberg_data.workshop.customer where name='Deepak'; 12.6 View the available snapshots SELECT snapshot_id FROM iceberg_data.workshop.\"customer$snapshots\" ORDER BY committed_at; 12.7 Rollback to previous snapshot - Replace the ID parameter with the snapshot ID previously found. Remember the closing parenthesis! CALL iceberg_data.system.rollback_to_snapshot('workshop','customer',ID) 12.8 Select customer Deepak select * from iceberg_data.workshop.customer where name='Deepak';","title":"12 Time Travel"},{"location":"db2-k8s/#13-federation","text":"13.1 Select the names of employees in the GOSALES database with employee ids between 4000 and 5000 select go.\"EMPLOYEE_KEY\", go.\"FIRST_NAME\", go.\"LAST_NAME\" from gosales.\"GOSALESDW\".\"EMP_EMPLOYEE_DIM\" go where go.\"EMPLOYEE_KEY\" between 4000 and 5000 order by go.\"EMPLOYEE_KEY\" 13.2 Select TPCH customers who are employees in GOSALES select t1.custkey, go.\"FIRST_NAME\", go.\"LAST_NAME\" from tpch.sf1.customer t1, gosales.\"GOSALESDW\".\"EMP_EMPLOYEE_DIM\" go where t1.custkey between 4000 and 5000 AND go.\"EMPLOYEE_KEY\" = t1.custkey order by t1.custkey 13.3 Create a table in iceberg_data using the Db2 employee table create table iceberg_data.workshop.db2employee AS select go.\"EMPLOYEE_KEY\", go.\"FIRST_NAME\", go.\"LAST_NAME\" from gosales.\"GOSALESDW\".\"EMP_EMPLOYEE_DIM\" go where go.\"EMPLOYEE_KEY\" between 4000 and 5000 order by go.\"EMPLOYEE_KEY\" 13.4 Query the contents of the new db2employee table select * from iceberg_data.workshop.db2employee","title":"13 Federation"},{"location":"ibmid/","text":"Requesting an IBM Userid You must obtain an IBM Login Userid to use the lab An IBMid is needed to access IBM Technology Zone. If you do not have an IBMid, click on the following link. https://techzone.ibm.com You should see the following login screen for TechZone. Click on the `Create an IBMid`` button and proceed to fill in the details on this form: Once you have verified your account, you can continue onto logging into the TechZone server.","title":"Requesting an IBMid"},{"location":"ibmid/#requesting-an-ibm-userid","text":"You must obtain an IBM Login Userid to use the lab An IBMid is needed to access IBM Technology Zone. If you do not have an IBMid, click on the following link. https://techzone.ibm.com You should see the following login screen for TechZone. Click on the `Create an IBMid`` button and proceed to fill in the details on this form: Once you have verified your account, you can continue onto logging into the TechZone server.","title":"Requesting an IBM Userid"},{"location":"jupyter-notebooks/","text":"Jupyter Notebook The workshop includes a Jupyter Notebook service which provides an interactive way of exploring the features of the lab. The link to the Jupyter Notebook table of contents is provided in your workshop reservation. Find the URL in your reservation that reads Jupyter Notebook - Server: http://useast.services.cloud.techzone.ibm.com:xxxx/notebooks/Table_of_Contents.ipynb and click on it The initial screen will request that you enter a password. Enter kubernetes as the password Once you have authenticated, the main table of contents will be displayed. The table of contents will be different for your workshop. Introduction to Jupyter Notebooks If you are not familiar with the use of Jupyter notebooks, this will be a good starting point. To view the notebook, click on the blue arrow found at the bottom of the box. This will open a new tab in your browser with the contents of the notebook. This notebook provides an introduction to what Jupyter Notebooks are and what the common tasks are that you can perform in a notebook.","title":"Jupyter Notebook"},{"location":"jupyter-notebooks/#jupyter-notebook","text":"The workshop includes a Jupyter Notebook service which provides an interactive way of exploring the features of the lab. The link to the Jupyter Notebook table of contents is provided in your workshop reservation. Find the URL in your reservation that reads Jupyter Notebook - Server: http://useast.services.cloud.techzone.ibm.com:xxxx/notebooks/Table_of_Contents.ipynb and click on it The initial screen will request that you enter a password. Enter kubernetes as the password Once you have authenticated, the main table of contents will be displayed. The table of contents will be different for your workshop.","title":"Jupyter Notebook"},{"location":"jupyter-notebooks/#introduction-to-jupyter-notebooks","text":"If you are not familiar with the use of Jupyter notebooks, this will be a good starting point. To view the notebook, click on the blue arrow found at the bottom of the box. This will open a new tab in your browser with the contents of the notebook. This notebook provides an introduction to what Jupyter Notebooks are and what the common tasks are that you can perform in a notebook.","title":"Introduction to Jupyter Notebooks"},{"location":"reference-workshop/","text":"Accessing a Workshop To access this workshop, you will need to have an IBM userid and a link provided to your class instructor. This link will first ask you to log into the system using your IBM userid, and then a screen similar to the following will be displayed: The title of the workshop may be different, but the steps to access the lab will remain the same. The class instructor will have provided a unique password for the course. Enter that value into the password/access code box and click on the Submit button. When the connection is successful, the details of your environment will be shown in the browser. The top of the page contains all the published services that you will use during the lab. For instance, if the lab requires that you access the Presto console, you would click on the link in this browser which says: Presto console - https://useast.techzone-services.com:xxxxx At the bottom of the reservation you will find a button that provides access to the machine console. The large blue button labelled VM Remote Console will provide access to the Linux operating system that the watsonx.data server is running on. See the section on VM Remote Console","title":"Accessing a Workshop"},{"location":"reference-workshop/#accessing-a-workshop","text":"To access this workshop, you will need to have an IBM userid and a link provided to your class instructor. This link will first ask you to log into the system using your IBM userid, and then a screen similar to the following will be displayed: The title of the workshop may be different, but the steps to access the lab will remain the same. The class instructor will have provided a unique password for the course. Enter that value into the password/access code box and click on the Submit button. When the connection is successful, the details of your environment will be shown in the browser. The top of the page contains all the published services that you will use during the lab. For instance, if the lab requires that you access the Presto console, you would click on the link in this browser which says: Presto console - https://useast.techzone-services.com:xxxxx At the bottom of the reservation you will find a button that provides access to the machine console. The large blue button labelled VM Remote Console will provide access to the Linux operating system that the watsonx.data server is running on. See the section on VM Remote Console","title":"Accessing a Workshop"},{"location":"workshop/","text":"Accessing a Workshop To access a watsonx.data workshop, you will need to have an IBM userid and a link provided to your class instructor. The following link will connect you to the workshop reservation page. Db2 Summit Lab link Click to connect to the Db2 Summit Lab Reservation This link will first ask you to log into the system using your IBM userid. Once you are connected, a screen similar to the following will be displayed: The title of the workshop will be different, but the steps to access the lab will remain the same. The class instructor will have provided a unique password for the course. Enter that value into the password/access code box and click on the Submit button. When the connection is successful, the details of your environment will be shown in the browser. The top of the page contains all the published services that you will use during the lab. For instance, if the lab requires that you access the Jupyter notebookm you would click on the link in this browser which says: Jupyter Notebook - https://useast.services.cloud.techzone.ibm.com:xxxxx Workshop URLs Each user will have a unique set of URLs for their environment. Your URL service name and port number will be different than the examples shown in this lab. Make sure to use your URLs in any examples that require a server URL address and port number. Certificate Errors The https links that are provided will result in a Certificate error in Firefox. Follow these steps to ignore the error when accessing these URLs. Select Advanced. Choose \"Accept the Risk and Continue\". If you are using Google Chrome, you can bypass the error message by typing in \"thisisunsafe\" or clicking on the \"Proceed to 192.168.252.2 (unsafe)\" link. Unable to Access External Links If you are using a corporate laptop, you may be blocked from accessing sites that have self-signed certificates or web-sites that require a non-standard port (80, 443). In these situations you will use the VM Console to access the lab. Console Versus Direct URL Be careful to follow the instructions in the lab to determine whether the command needs to be run from a URL (browser) or the Console (browser). The behavior of some commands will be different depending on which environment you are running in.","title":"Accessing a workshop"},{"location":"workshop/#accessing-a-workshop","text":"To access a watsonx.data workshop, you will need to have an IBM userid and a link provided to your class instructor. The following link will connect you to the workshop reservation page. Db2 Summit Lab link Click to connect to the Db2 Summit Lab Reservation This link will first ask you to log into the system using your IBM userid. Once you are connected, a screen similar to the following will be displayed: The title of the workshop will be different, but the steps to access the lab will remain the same. The class instructor will have provided a unique password for the course. Enter that value into the password/access code box and click on the Submit button. When the connection is successful, the details of your environment will be shown in the browser. The top of the page contains all the published services that you will use during the lab. For instance, if the lab requires that you access the Jupyter notebookm you would click on the link in this browser which says: Jupyter Notebook - https://useast.services.cloud.techzone.ibm.com:xxxxx Workshop URLs Each user will have a unique set of URLs for their environment. Your URL service name and port number will be different than the examples shown in this lab. Make sure to use your URLs in any examples that require a server URL address and port number.","title":"Accessing a Workshop"},{"location":"workshop/#certificate-errors","text":"The https links that are provided will result in a Certificate error in Firefox. Follow these steps to ignore the error when accessing these URLs. Select Advanced. Choose \"Accept the Risk and Continue\". If you are using Google Chrome, you can bypass the error message by typing in \"thisisunsafe\" or clicking on the \"Proceed to 192.168.252.2 (unsafe)\" link.","title":"Certificate Errors"},{"location":"workshop/#unable-to-access-external-links","text":"If you are using a corporate laptop, you may be blocked from accessing sites that have self-signed certificates or web-sites that require a non-standard port (80, 443). In these situations you will use the VM Console to access the lab. Console Versus Direct URL Be careful to follow the instructions in the lab to determine whether the command needs to be run from a URL (browser) or the Console (browser). The behavior of some commands will be different depending on which environment you are running in.","title":"Unable to Access External Links"},{"location":"wxd-lab-instructions/","text":"Lab Instructions Follow the instructions in the section below which corresponds with the lab that you are running. Db2 Development with Jupyter Notebooks This hands-on lab will explore the use of Jupyter notebooks as an environment to test, prototype, and run Db2 code. Learn how you can take advantage of this environment to make your life easier when coding SQL! In order to run this lab you must first download the latest set of lab materials to your system. These instructions must be run using the VM Console Open a Firefox browser session in the VM Console and enter the following link: https://ibm.biz/db2summitdb2 This will open up this notebook with instructions on how to update the image and start the lab. Db2u installation in a Kubernetes environment This lab will show you how to get Db2 up and running in a Kubernetes environment. Learn how to create Db2 pods and then migrate data from existing databases into this environment. These instructions must be run using the VM Console Open a Firefox browser session in the VM Console and enter the following link: https://ibm.biz/db2summitk8s This will open up this notebook with instructions on how to update the image and start the lab.","title":"Lab Instructions"},{"location":"wxd-lab-instructions/#lab-instructions","text":"Follow the instructions in the section below which corresponds with the lab that you are running.","title":"Lab Instructions"},{"location":"wxd-lab-instructions/#db2-development-with-jupyter-notebooks","text":"This hands-on lab will explore the use of Jupyter notebooks as an environment to test, prototype, and run Db2 code. Learn how you can take advantage of this environment to make your life easier when coding SQL! In order to run this lab you must first download the latest set of lab materials to your system. These instructions must be run using the VM Console Open a Firefox browser session in the VM Console and enter the following link: https://ibm.biz/db2summitdb2 This will open up this notebook with instructions on how to update the image and start the lab.","title":"Db2 Development with Jupyter Notebooks"},{"location":"wxd-lab-instructions/#db2u-installation-in-a-kubernetes-environment","text":"This lab will show you how to get Db2 up and running in a Kubernetes environment. Learn how to create Db2 pods and then migrate data from existing databases into this environment. These instructions must be run using the VM Console Open a Firefox browser session in the VM Console and enter the following link: https://ibm.biz/db2summitk8s This will open up this notebook with instructions on how to update the image and start the lab.","title":"Db2u installation in a Kubernetes environment"},{"location":"wxd-reference-ports/","text":"Watsonx.data Ports The top of your TechZone reservation will contain a list of published services at the top of the details page. These URLs and Port numbers are needed to access the watsonx.data services. The list will contain the following information: SSH for watsonx userid - ssh -p xxxxx watsonx@region.services.cloud.techzone.ibm.com SSH Browser - Server: http://region.services.cloud.techzone.ibm.com:33333/terminals/1 MySQL Port - Server: region.services.cloud.techzone.ibm.com Port: 12345 PostgreSQL Port - Server: region.services.cloud.techzone.ibm.com Port: 23456 Portainer console - https://region.services.cloud.techzone.ibm.com:34567 Apache Superset - http://region.services.cloud.techzone.ibm.com:43221 Presto console - https://region.services.cloud.techzone.ibm.com:15152 Presto Port - Server: region.services.cloud.techzone.ibm.com Port: 15152 Jupyter Notebook - Server: http://region.services.cloud.techzone.ibm.com:33333/notebooks/Table_of_Contents.ipynb Minio Endpoint - Server: region.services.cloud.techzone.ibm.com Port: 25623 Minio console - http://region.services.cloud.techzone.ibm.com:14352 Hive Thrift URL - thrift://region.services.cloud.techzone.ibm.com:35421 Watsonx UI - https://region.services.cloud.techzone.ibm.com:41311 Db2 Port - Server: region.services.cloud.techzone.ibm.com Port: 24312 Milvus Port - Server: region.services.cloud.techzone.ibm.com Port: 34312 There are two additional ports which are available for use with any service you install in the system. These ports are: Open Port 1 - Server: region.services.cloud.techzone.ibm.com: Port: 43611 Open Port 2 - Server: region.services.cloud.techzone.ibm.com: Port: 45623 The server URL will be different for each region and data center that your machine is provisioned on. The server name is usually in the format: region.services.cloud.techzone.ibm.com:port The port number that is provided in the reservation is mapped to the proper port number in the server. For instance, the Db2 Port number is 50000 in the server, but the reservation above shows a port number of 24312. Use the following rules for determining what server name and port number to use when connecting to the databases: If you are using a program \"inside\" the watsonx server, the host is watsonxdata or localhost . Some systems will require the watsonx service name (ibm-lh-postgres) and these are highlighted in the documentation. The port number will always be the native port (i.e. 5432 for PostgreSQL). If you are using a program \"outside\" the watsonx server, the host is the one provided in your reservation region.services.cloud.techzone.ibm.com and the port will the one that is included as part of the URL (i.e. 23456 in the example above). Watsonx.data Open Ports The following URLs and Ports are used to access the watsonx.data services. Most browsers will work with these URLs. Note : Mac OSX users should be aware that accessing the MinIO console may occasionally cause Firefox and Chrome to lock up. If you find that this occurs, try using Safari which appears to work fine. The ports that are used in the lab listed below, including their available when you first access the lab. The internal port number is always the same when running in the VMware image using the VM Remote Console. When using your workstation's browser, you will need to use the server name and port number supplied in the TechZone reservation. Service Port Active watsonx.data management console 9443 Yes Presto console 8443 Yes MinIO console (S3 buckets) 9001 Yes MinIO S3 Endpoint 9000 Yes Portainer (Docker container management) 6443 Yes Apache Superset (Query and Graphing) 8088 No Jupyter Notebook 8888 Yes Presto External Port 8443 Yes Hive metadata Port 9043 Yes Milvus 19530 Yes MySQL External Port 3306 Yes Postgres External Port 5432 Yes Db2 Database Port 50000 Yes Note : The following port is not active unless the service is started: Apache Superset (8088) There are three https links will result in a Certificate error in Firefox: watsonx.data UI Presto UI Portainer UI Follow these steps to ignore the error when accessing these URLs. Select Advanced. Choose \"Accept the Risk and Continue\". If you are using Google Chrome, you can bypass the error message by typing in \"thisisunsafe\" or clicking on the \"Proceed to 192.168.252.2 (unsafe)\" link.","title":"Watsonx.data Ports"},{"location":"wxd-reference-ports/#watsonxdata-ports","text":"The top of your TechZone reservation will contain a list of published services at the top of the details page. These URLs and Port numbers are needed to access the watsonx.data services. The list will contain the following information: SSH for watsonx userid - ssh -p xxxxx watsonx@region.services.cloud.techzone.ibm.com SSH Browser - Server: http://region.services.cloud.techzone.ibm.com:33333/terminals/1 MySQL Port - Server: region.services.cloud.techzone.ibm.com Port: 12345 PostgreSQL Port - Server: region.services.cloud.techzone.ibm.com Port: 23456 Portainer console - https://region.services.cloud.techzone.ibm.com:34567 Apache Superset - http://region.services.cloud.techzone.ibm.com:43221 Presto console - https://region.services.cloud.techzone.ibm.com:15152 Presto Port - Server: region.services.cloud.techzone.ibm.com Port: 15152 Jupyter Notebook - Server: http://region.services.cloud.techzone.ibm.com:33333/notebooks/Table_of_Contents.ipynb Minio Endpoint - Server: region.services.cloud.techzone.ibm.com Port: 25623 Minio console - http://region.services.cloud.techzone.ibm.com:14352 Hive Thrift URL - thrift://region.services.cloud.techzone.ibm.com:35421 Watsonx UI - https://region.services.cloud.techzone.ibm.com:41311 Db2 Port - Server: region.services.cloud.techzone.ibm.com Port: 24312 Milvus Port - Server: region.services.cloud.techzone.ibm.com Port: 34312 There are two additional ports which are available for use with any service you install in the system. These ports are: Open Port 1 - Server: region.services.cloud.techzone.ibm.com: Port: 43611 Open Port 2 - Server: region.services.cloud.techzone.ibm.com: Port: 45623 The server URL will be different for each region and data center that your machine is provisioned on. The server name is usually in the format: region.services.cloud.techzone.ibm.com:port The port number that is provided in the reservation is mapped to the proper port number in the server. For instance, the Db2 Port number is 50000 in the server, but the reservation above shows a port number of 24312. Use the following rules for determining what server name and port number to use when connecting to the databases: If you are using a program \"inside\" the watsonx server, the host is watsonxdata or localhost . Some systems will require the watsonx service name (ibm-lh-postgres) and these are highlighted in the documentation. The port number will always be the native port (i.e. 5432 for PostgreSQL). If you are using a program \"outside\" the watsonx server, the host is the one provided in your reservation region.services.cloud.techzone.ibm.com and the port will the one that is included as part of the URL (i.e. 23456 in the example above).","title":"Watsonx.data Ports"},{"location":"wxd-reference-ports/#watsonxdata-open-ports","text":"The following URLs and Ports are used to access the watsonx.data services. Most browsers will work with these URLs. Note : Mac OSX users should be aware that accessing the MinIO console may occasionally cause Firefox and Chrome to lock up. If you find that this occurs, try using Safari which appears to work fine. The ports that are used in the lab listed below, including their available when you first access the lab. The internal port number is always the same when running in the VMware image using the VM Remote Console. When using your workstation's browser, you will need to use the server name and port number supplied in the TechZone reservation. Service Port Active watsonx.data management console 9443 Yes Presto console 8443 Yes MinIO console (S3 buckets) 9001 Yes MinIO S3 Endpoint 9000 Yes Portainer (Docker container management) 6443 Yes Apache Superset (Query and Graphing) 8088 No Jupyter Notebook 8888 Yes Presto External Port 8443 Yes Hive metadata Port 9043 Yes Milvus 19530 Yes MySQL External Port 3306 Yes Postgres External Port 5432 Yes Db2 Database Port 50000 Yes Note : The following port is not active unless the service is started: Apache Superset (8088) There are three https links will result in a Certificate error in Firefox: watsonx.data UI Presto UI Portainer UI Follow these steps to ignore the error when accessing these URLs. Select Advanced. Choose \"Accept the Risk and Continue\". If you are using Google Chrome, you can bypass the error message by typing in \"thisisunsafe\" or clicking on the \"Proceed to 192.168.252.2 (unsafe)\" link.","title":"Watsonx.data Open Ports"}]}